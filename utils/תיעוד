שלב 1: טעינת הדאטה
קובץ DB.csv נטען על ידי המחלקה DatasetLoader שמשתמשת ב־pandas (read_csv).

==================================================================
שלב 2: ניקוי נתונים
DataCleaner מקבל את הדאטה ומבצע ניקוי:

מוחק את העמודה id אם קיימת.

מוחק עמודות ושורות ריקות לחלוטין.

מוסיף 1 לכל ערך מספרי שהוא 0.

מאפס את האינדקס.

==================================================================

שלב 3: בניית מודל הסתברויות
NaiveBayesModel מבצע:

זיהוי משתנה המטרה – העמודה האחרונה (Buy_Computer).

חישוב הסתברויות בסיס (prior probabilities) – כמה "כן" לעומת "לא".

חישוב הסתברויות מותנות (conditional probabilities) לכל ערך בכל תכונה, לפי כל קטגוריה של המטרה, עם תיקון לפלס (Laplacian Smoothing).

==================================================================

שלב 4: הכנת המסווג
NaiveBayesClassifier מקבל את המודל ומסוגל לבצע:

predict(record): חיזוי על פי דיקט של תכונות. מחשב הסתברות לכל מחלקה ובוחר את הגבוהה ביותר.

evaluate(df): בודק דיוק המודל על דאטה נתון על ידי השוואת תחזיות מול תשובות אמיתיות.

==================================================================

שלב 5: הרצת היישום
AppController מריץ את כל השלבים הראשוניים:

טוען את הדאטה

מנקה אותו

מתאים את המודל (fit)

יוצר מופע של המסווג

==================================================================

שלב 6: צד השרת (FastAPI)
הקובץ server.py מרים את השרת:

מחבר את כל החלקים דרך AppController.

יש שני endpoints:

POST /predict: מקבל רשומות JSON ומחזיר "Will buy" או "Will NOT buy".

GET /: מחזיר את קובץ HTML הראשי מהמיקום static/index.html.

==================================================================

שלב 7: צד הלקוח (HTML ו־JavaScript)
דף HTML מאפשר למשתמש לבחור ערכים מתוך טופס:

גיל, הכנסה, סטודנט, דירוג אשראי.

נשלח בקשת POST ל־/predict.

התוצאה מוצגת בתוך תיבת #result.

==================================================================

שלב 8: Docker
קובץ Dockerfile מאפשר לך לארוז את האפליקציה לתוך קונטיינר:

משתמש בתמונה python:3.10-slim.

מתקין את התלויות (pandas, fastapi, uvicorn).

מעתיק את הקוד.

מריץ את uvicorn על פורט 8000.

==================================================================

שלב 9: בקשה חיצונית לבדיקה
קובץ נוסף מבצע בדיקה חיצונית לשרת עם שתי רשומות בעזרת requests.post.